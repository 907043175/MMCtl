apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'

android {
    compileSdkVersion 27
    buildToolsVersion '26.0.2'
    defaultConfig {
        applicationId "com.cc.wechatmanager"
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

greendao {
    schemaVersion 1//数据库版本号
    daoPackage 'com.cc.wechatmanager.data.db'//设置DaoMaster、DaoSession、Dao包名
    //targetGenDir 'src/main/java'//设置DaoMaster、DaoSession、Dao目录
    //targetGenDirTest：设置生成单元测试目录
    //generateTests：设置自动生成单元测试用例
}

task genActions  {
    doLast {

        file('src/main/java/com/cc/wechatmanager/actions/ActionNames.java').withWriter('UTF-8') { writer ->
            writer.write("package com.cc.wechatmanager.actions;\n\npublic class ActionNames {\n" +
                    "\tpublic static final String[] ACTION_NAMES = new String[]{\n")
        }
        file('src/main/java/com/cc/wechatmanager/actions/ActionNames.java').withWriterAppend('UTF-8') { writer ->
            fileTree('src/main/java/com/cc/wechatmanager/actions/shell/impl').include("*.java").each {
                writer.write("\t\t\"com.cc.wechatmanager.actions.shell.impl." + it.name.substring(0, it.name.lastIndexOf('.java')) + "\",\n")
            }
        }
        file('src/main/java/com/cc/wechatmanager/actions/ActionNames.java').withWriterAppend('UTF-8') { writer ->
            fileTree('src/main/java/com/cc/wechatmanager/actions/accessibility/impl').include("*.java").each {
                writer.write("\t\t\"com.cc.wechatmanager.actions.accessibility.impl." + it.name.substring(0, it.name.lastIndexOf('.java')) + "\",\n")
            }
        }
        file('src/main/java/com/cc/wechatmanager/actions/ActionNames.java').withWriterAppend('UTF-8') { writer ->
            fileTree('src/main/java/com/cc/wechatmanager/actions/xposed/impl').include("*.java").each {
                writer.write("\t\t\"com.cc.wechatmanager.actions.xposed.impl." + it.name.substring(0, it.name.lastIndexOf('.java')) + "\",\n")
            }
        }
        file('src/main/java/com/cc/wechatmanager/actions/ActionNames.java').withWriterAppend('UTF-8') { writer ->
            writer.write("\t};\n}")
        }

        /*file('src/main/assets/actions.ini').withWriter('UTF-8') { writer ->
            fileTree('src/main/java/com/cc/wechatmanager/actions/shell/impl').include("*.java").each {
                writer.write("com.cc.wechatmanager.actions.shell.impl." +  it.name.substring(0, it.name.lastIndexOf('.')) + "\n")
            }
        }

        file('src/main/assets/actions.ini').withWriterAppend('UTF-8') { writer ->
            fileTree('src/main/java/com/cc/wechatmanager/actions/accessibility/impl').include("*.java").each {
                writer.write("com.cc.wechatmanager.actions.accessibility.impl." +  it.name.substring(0, it.name.lastIndexOf('.')) + "\n")
            }
        }*/
    }
}

task genHooks  {
    doLast {
        file('src/main/java/com/cc/wechatmanager/wechat/HookNames.java').withWriter('UTF-8') { writer ->
            writer.write("package com.cc.wechatmanager.wechat;\n\npublic class HookNames {\n" +
                    "\tpublic static String[] HOOK_NAMES = new String[] {\n")
        }
        file('src/main/java/com/cc/wechatmanager/wechat/HookNames.java').withWriterAppend('UTF-8') { writer ->
            fileTree('src/main/java/com/cc/wechatmanager/wechat/hook').include("*.java").each {
                writer.write("\t\t\"com.cc.wechatmanager.wechat.hook." + it.name.substring(0, it.name.lastIndexOf('.java')) + "\",\n")
            }
        }
        file('src/main/java/com/cc/wechatmanager/wechat/HookNames.java').withWriterAppend('UTF-8') { writer ->
            writer.write("\t};\n}")
        }

    }
}

preBuild.dependsOn genActions
preBuild.dependsOn genHooks

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "com.android.support:appcompat-v7:27.+"
    compile 'org.greenrobot:greendao:3.2.2'
    compile 'com.google.code.gson:gson:2.8.5'
    provided 'de.robv.android.xposed:api:82'
    provided 'de.robv.android.xposed:api:82:sources'
}
